{"ast":null,"code":"import _slicedToArray from\"C:/Users/Chase/OneDrive/Documents/GitHub/imagequiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useLocation,useParams}from\"react-router-dom\";import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Card from'react-bootstrap/Card';import Spinner from'react-bootstrap/Spinner';import ListGroup from'react-bootstrap/ListGroup';import dataService from\"../data_access_layer/local_temporarily_storage\";import{useEffect,useState}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Quiz=function Quiz(){var getColor=function getColor(answer,choice){console.log(answer);console.log(choice);if(color==1){if(answer!=choice){return\"red\";}else{return\"green\";}}};var checkAns=function checkAns(answer,choice){if(answer!=choice){return 0;}else{return 1;}};var _useState=useState(0),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),currentQuestionNumber=_useState6[0],setCurrentQuestionNumber=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),quiz=_useState8[0],setQuiz=_useState8[1];var _useParams=useParams(),id=_useParams.id;useEffect(function(){if(!quiz){var x=dataService.getQuiz(id);setQuiz(x);}if(currentQuestionNumber>=6){window.location.href=\"./Home\";}});if(currentQuestionNumber>=5){return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Result: \",count,\"/6\"]})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn btn-primary\",onClick:function onClick(){setCurrentQuestionNumber(currentQuestionNumber+1);},children:\"Next\"})})})]});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{xs:1,md:3,className:\"g-4 text-center\",children:/*#__PURE__*/_jsx(Col,{children:quiz?/*#__PURE__*/_jsxs(Card,{className:\"h-100\",children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:quiz.questions[currentQuestionNumber].picture}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:quiz.name}),/*#__PURE__*/_jsx(Card.Text,{children:\"Let's take the quiz now!\"})]}),/*#__PURE__*/_jsx(ListGroup,{children:quiz.questions[currentQuestionNumber].choices.map(function(x){return/*#__PURE__*/_jsx(ListGroup.Item,{style:{background:getColor(quiz.questions[currentQuestionNumber].answer,x)},class:\"list-group-item list-group-item-action\",type:\"button\",onClick:function onClick(){setColor(1);setCount(count+checkAns(quiz.questions[currentQuestionNumber].answer,x));},children:x});})})]}):/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn btn-primary\",onClick:function onClick(){setCurrentQuestionNumber(currentQuestionNumber+1);setColor(0);},children:\"Next\"})})})]});};export default Quiz;","map":{"version":3,"sources":["C:/Users/Chase/OneDrive/Documents/GitHub/imagequiz/src/components/Quiz.js"],"names":["useLocation","useParams","Container","Row","Col","Card","Spinner","ListGroup","dataService","useEffect","useState","Quiz","getColor","answer","choice","console","log","color","checkAns","setColor","count","setCount","currentQuestionNumber","setCurrentQuestionNumber","undefined","quiz","setQuiz","id","x","getQuiz","window","location","href","questions","picture","name","choices","map","background"],"mappings":"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","sourcesContent":["import { useLocation, useParams } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport dataService from \"../data_access_layer/local_temporarily_storage\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Quiz = () => {\r\n    const getColor = (answer, choice) => {\r\n      console.log(answer);\r\n      console.log(choice);\r\n      if(color == 1){\r\n        if(answer != choice){\r\n          return \"red\";\r\n        } else {\r\n          return \"green\";\r\n        }\r\n      }\r\n    };\r\n    const checkAns = (answer, choice) => {\r\n      if(answer != choice){\r\n        return 0;\r\n      } else {\r\n        return 1;\r\n      }\r\n    }\r\n    const[color,setColor]=useState(0);\r\n    const[count, setCount]=useState(0);\r\n    const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\r\n    const [quiz, setQuiz] = useState(undefined);\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n      if(!quiz){\r\n        let x = dataService.getQuiz(id);\r\n        setQuiz(x);\r\n      }\r\n      if(currentQuestionNumber >= 6){\r\n        window.location.href = \"./Home\";\r\n      }\r\n    });\r\n\r\n    if(currentQuestionNumber >= 5){\r\n      return(\r\n        <Container>\r\n        <Row>\r\n          <Col>\r\n            <p>Result: {count}/6</p>\r\n          </Col>\r\n        </Row>\r\n          <Row>\r\n            <Col>\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={() =>{setCurrentQuestionNumber(currentQuestionNumber + 1)}}>Next</button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n      return (\r\n          <Container>\r\n              <Row xs={1} md={3} className=\"g-4 text-center\">\r\n                  <Col>\r\n                    {quiz ?\r\n                        <Card className=\"h-100\" >\r\n                            <Card.Img variant=\"top\" src={quiz.questions[currentQuestionNumber].picture} />\r\n                            <Card.Body>\r\n                                <Card.Title>{quiz.name}</Card.Title>\r\n                                <Card.Text>\r\n                                    Let's take the quiz now!\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup>\r\n                                {quiz.questions[currentQuestionNumber].choices.map(x =>\r\n                                    <ListGroup.Item style={{background:getColor(quiz.questions[currentQuestionNumber].answer, x)}}class=\"list-group-item list-group-item-action\" type=\"button\" onClick={() =>{setColor(1); setCount(count + checkAns(quiz.questions[currentQuestionNumber].answer, x))}}>{x}</ListGroup.Item>\r\n                                   )}\r\n                            </ListGroup>\r\n                        </Card>\r\n                        :\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                          <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                      }\r\n                  </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <button type=\"button\" class=\"btn btn-primary\" onClick={() =>{setCurrentQuestionNumber(currentQuestionNumber + 1); setColor(0)}}>Next</button>\r\n                </Col>\r\n              </Row>\r\n          </Container>\r\n      );\r\n}\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}